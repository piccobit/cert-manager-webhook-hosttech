---
name: Docker Image CI Build

defaults:
  run:
    shell: bash
    working-directory: .github/scripts

on:
  push:
    branches:
      - main

jobs:
  docker:
    if: contains(github.event.head_commit.message, '[RELEASE]') || contains(github.event.head_commit.message, '[PRERELEASE]') || contains(github.event.head_commit.message, '[DEBUG]')
    runs-on: ubuntu-22.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get semver options from HEAD commit
        id: semver_options
        run: ./get-semver-options.sh >> $GITHUB_OUTPUT
      -
        name: Generate new semantic version tag
        if: contains(github.event.head_commit.message, '[RELEASE]') || contains(github.event.head_commit.message, '[PRERELEASE]') || contains(github.event.head_commit.message, '[DEBUG]')
        id: semantic_version
        uses: zwaldowski/semver-release-action@v3
        with:
          bump: ${{ steps.semver_options.outputs.bump_mode }}
          preid: ${{ steps.semver_options.outputs.preid }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push debug release
        if: contains(github.event.head_commit.message, '[DEBUG]')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.debug
          platforms: linux/amd64
          push: true
          tags: piccobit/cert-manager-webhook-hosttech:${{ steps.semantic_version.outputs.version }}
      -
        name: Build and push pre-release
        if: contains(github.event.head_commit.message, '[PRERELEASE]')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: piccobit/cert-manager-webhook-hosttech:${{ steps.semantic_version.outputs.version }}
      -
        name: Build and push release
        if: contains(github.event.head_commit.message, '[RELEASE]')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: piccobit/cert-manager-webhook-hosttech:${{ steps.semantic_version.outputs.version }}
